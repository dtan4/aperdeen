// Code generated by MockGen. DO NOT EDIT.
// Source: apigateway.go

// Package apigateway is a generated GoMock package.
package apigateway

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockClient is a mock of Client interface
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// ListAPIs mocks base method
func (m *MockClient) ListAPIs() ([]*API, error) {
	ret := m.ctrl.Call(m, "ListAPIs")
	ret0, _ := ret[0].([]*API)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAPIs indicates an expected call of ListAPIs
func (mr *MockClientMockRecorder) ListAPIs() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAPIs", reflect.TypeOf((*MockClient)(nil).ListAPIs))
}

// ListEndpoints mocks base method
func (m *MockClient) ListEndpoints(apiID string) ([]*Endpoint, error) {
	ret := m.ctrl.Call(m, "ListEndpoints", apiID)
	ret0, _ := ret[0].([]*Endpoint)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListEndpoints indicates an expected call of ListEndpoints
func (mr *MockClientMockRecorder) ListEndpoints(apiID interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListEndpoints", reflect.TypeOf((*MockClient)(nil).ListEndpoints), apiID)
}

// ListStages mocks base method
func (m *MockClient) ListStages(apiID string) ([]*Stage, error) {
	ret := m.ctrl.Call(m, "ListStages", apiID)
	ret0, _ := ret[0].([]*Stage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListStages indicates an expected call of ListStages
func (mr *MockClientMockRecorder) ListStages(apiID interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListStages", reflect.TypeOf((*MockClient)(nil).ListStages), apiID)
}
